<?php

/**
 * @file
 * Allows users to authenticate themselves via Hawk authentication.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Session\AccountInterface;

/**
 * Implements hook_help().
 */
function hawk_auth_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.hawk_auth':
      $output = '<p>' . t('Hawk Authentication provides an alternative to Basic Authentication and Cookie
                           for authenticating client, primarily intended for REST use. Users need to be
                           granted permission in order to be able to create authentication keys from their
                           profile. See <a href="http://github.com/hueniverse/hawk">Hawk</a> for more information
                           about the protocol') . '</p>';
      return $output;

    case 'hawk_auth.user_credential':
      $output = '<p>' . t('This page lists all the valid Hawk Credentials associated with your account.
                           When providing ID for the client, use the ID listed against the key secret and not your
                           account ID.') . '</p>';

      $user = $route_match->getParameter('user');
      if (hawk_get_max_credentials($user) > 0) {
        $output .= '
          <div role="contentinfo" aria-label="' . t('Warning') . '" class="messages messages--warning">
              <div role="alert">
                      <h2 class="visually-hidden">' . t('Warning') . '</h2>
                        ' . t((Drupal::currentUser()->id() == $user ? 'You' : 'This user') . ' can have a maximum of !credentials credentials',
                              [
                                '!credentials' => hawk_get_max_credentials($user)
                              ]) . '
                    </div>
          </div>';
      }

      return $output;

    case 'hawk_auth.user_credential_permissions':
      if (Drupal::currentUser()->id() == 1) {
        $output = '
          <div role="contentinfo" aria-label="' . t('Error message') . '" class="messages messages--error">
              <div role="alert">
                      <h2 class="visually-hidden">' . t('Error message') . '</h2>
                        ' . t('Users with ID #1 cannot revoke permissions due to the way Drupal internally handles permissions') . '
                    </div>
          </div>';
      }
      else {
        $output = '<p>' . t('All the selected permissions on this page are revoked for the current hawk
                             credential. When a client is connecting using this hawk credential, they
                             will not be allowed to perform any action that requires a permission
                             you revoke from here.') . '</p>';
      }
      return $output;
  }
}

/**
 * Returns the maximum number of credentials an user can have.
 *
 * @param AccountInterface $account
 *   The account to check
 *
 * @return int
 *   Returns 0 if unlimited.
 */
function hawk_get_max_credentials(AccountInterface $account) {
  $config = \Drupal::config('hawk.roles');
  $role_storage = \Drupal::getContainer()->get('entity.manager')->getStorage('user_role');

  /**
   * @var \Drupal\user\RoleInterface[] $roles
   */
  $roles = $role_storage->loadMultiple($account->getRoles());

  $max = 0;
  foreach ($roles as $role) {
    if ($role->hasPermission('administer hawk')) {
      $max = 0;
      break;
    }

    $limit = $config->get('limit.' . $role->id());
    if (!empty($limit) && $limit > $max) {
      $max = $limit;
    }
    else if ($limit === 0) {
      $max = 0;
      break;
    }
  }

  return $max;
}
